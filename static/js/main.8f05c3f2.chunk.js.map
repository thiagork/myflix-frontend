{"version":3,"sources":["actions/actions.js","reducers/reducers.js","components/nav-bar/sort-button.jsx","components/nav-bar/nav-bar.jsx","components/movie-card/movie-card.jsx","components/movies-list/movies-list.jsx","components/login-view/login-view.jsx","components/movie-view/movie-view.jsx","components/registration-view/registration-view.jsx","components/genre-view/genre-view.jsx","components/director-view/director-view.jsx","components/profile-view/change-password.jsx","components/profile-view/edit-profile.jsx","components/profile-view/profile-view.jsx","components/main-view/main-view.jsx","App.js","serviceWorker.js","index.js"],"names":["SET_MOVIES","SORT_AZ","SORT_ZA","SORT_DIRECTOR","SORT_GENRE","SORT_ID","SET_USER","SEARCH_BAR_VISIBLE","SEARCH_VALUE","setMovies","value","type","setUser","newValue","Object","objectSpread","Password","localStorage","clear","setItem","JSON","stringify","getMovies","dispatch","axios","get","headers","Authorization","concat","token","then","response","data","movies","catch","err","console","error","removeMovieFromFavorites","movieId","delete","parse","user","Username","moviesApp","combineReducers","state","arguments","length","undefined","action","toConsumableArray","sort","a","b","_id","toUpperCase","Title","Director","Name","Genre","searchBarVisible","searchValue","mapDispatchToProps","sortAZ","sortZA","connect","props","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","react_default","createElement","ButtonGroup","variant","color","ref","aria-label","Button","size","aria-owns","aria-haspopup","onClick","prevOpen","Sort_default","Popper","anchorEl","transition","disablePortal","_ref","TransitionProps","placement","Grow","assign","style","transformOrigin","Paper","id","ClickAwayListener","onClickAway","MenuList","MenuItem","key","e","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","padding","transitions","create","&:focus","makeSearch","sortId","_useState","_useState2","searchInput","setSearchInput","classes","AppBar","Toolbar","className","Link","component","RouterLink","to","Typography","noWrap","sort_button","Search_default","onSubmit","preventDefault","InputBase","placeholder","input","inputProps","onChange","IconButton","window","Icon","movie","react_router_dom","textDecoration","Card_default","Img","src","ImagePath","Body","FavoriteMovies","indexOf","Text","Description","useEffect","moviesToShow","filter","toLowerCase","includes","toLocaleLowerCase","Container_default","Row_default","map","Col_default","xl","sm","md","xs","movie_card_movie_card","Alert_default","MainView","loginUser","username","password","post","setUsername","_useState3","_useState4","setPassword","Form_default","Group","controlId","Label","Control","Button_default","addMovieToFavorites","find","RegistrationView","_useState5","_useState6","email","setEmail","_useState7","_useState8","birthday","setBirthday","Email","Birthday","genre","setGenre","ListGroup_default","Item","director","setDirector","directorName","Bio","ChangePassword","isOpen","setIsOpen","oldPassword","setOldpassword","newPassword","setNewPassword","newPasswordRepeat","setNewPasswordRepeat","submitChange","patch","OldPassword","NewPassword","log","Fragment","Collapse_default","in","field","EditProfile","userInput","setUserInput","updateUser","deleteAccount","callback","config","mov","favMov","react_router","dispatchSetUser","dispatchGetMovies","accessToken","getItem","nav_bar_nav_bar","fluid","exact","path","render","movies_list","profile_view_profile_view","match","movie_view_movie_view","params","Id","_ref2","genre_view_genre_view","_ref3","director_view_director_view","login_view_login_view","store","createStore","applyMiddleware","thunk","App","react_redux_es","main_view_main_view","Component","Boolean","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f05c3f2.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const SET_MOVIES = 'SET_MOVIES';\nexport const SORT_AZ = 'SORT_AZ';\nexport const SORT_ZA = 'SORT_ZA';\nexport const SORT_DIRECTOR = 'SORT_DIRECTOR';\nexport const SORT_GENRE = 'SORT_GENRE';\nexport const SORT_ID = 'SORT_ID';\nexport const SET_USER = 'SET_USER';\nexport const SET_FILTER = 'SET_FILTER';\nexport const SET_SORT_COLUMN = 'SET_SORT_COLUMN';\nexport const SEARCH_BAR_VISIBLE = 'SEARCH_BAR_VISIBLE';\nexport const SEARCH_VALUE = 'SEARCH_VALUE';\n\n\n// Normal actions\nexport const setMovies = (value) => {\n    return { type: SET_MOVIES, value };\n}\n\nexport const sortAZ = () => {\n    return { type: SORT_AZ };\n}\n\nexport const sortZA = () => {\n    return { type: SORT_ZA };\n}\n\nexport const sortDirector = () => {\n    return { type: SORT_DIRECTOR };\n}\n\nexport const sortGenre = () => {\n    return { type: SORT_GENRE };\n}\n\nexport const sortId = () => {\n    return { type: SORT_ID };\n}\n\nexport const setUser = (value) => {\n    let newValue = {...value};\n    delete newValue.Password;\n    if (value === '') {\n        localStorage.clear();\n    } else {\n        localStorage.setItem('user', JSON.stringify(newValue));\n    };\n    return { type: SET_USER, newValue };\n}\n\nexport const setSortColumn = (value) => {\n    return { type: SET_SORT_COLUMN, value };\n}\n\nexport const searchBarVisible = (value) => {\n    return { type: SEARCH_BAR_VISIBLE, value };\n}\n\nexport const makeSearch = (value) => {\n    return { type: SEARCH_VALUE, value };\n}\n\n// Thunked actions (async)\nexport const getMovies = () => dispatch => {\n    axios.get('https://myflix-mern.herokuapp.com/movies', {\n        headers: { Authorization: `Bearer ${localStorage.token}` }\n    })\n        .then(response => response.data)\n        .then(movies => {\n            dispatch(setMovies(movies))\n        })\n        .catch(err => {\n            console.error(err);\n        });\n}\n\nexport const addMovieToFavorites = (movieId) => dispatch => {\n    axios.post(`https://myflix-mern.herokuapp.com/users/${JSON.parse(localStorage.user).Username}/movies/${movieId}`, {}, {\n        headers: { Authorization: `Bearer ${localStorage.token}` }\n    })\n        .then(response => response.data)\n        .then(user => {\n            dispatch(setUser(user));\n        })\n        .catch(err => {\n            console.error(err);\n        });\n}\n\nexport const removeMovieFromFavorites = (movieId) => dispatch => {\n    axios.delete(`https://myflix-mern.herokuapp.com/users/${JSON.parse(localStorage.user).Username}/movies/${movieId}`, {\n        headers: { Authorization: `Bearer ${localStorage.token}` }\n    })\n        .then(response => response.data)\n        .then(user => {\n            dispatch(setUser(user));\n        })\n        .catch(err => {\n            console.error(err);\n        });\n}\n\nexport const deleteAccount = () => dispatch => {\n    axios.delete(`https://myflix-mern.herokuapp.com/users/${JSON.parse(localStorage.user).Username}`, {\n        headers: { Authorization: `Bearer ${localStorage.token}` }\n    })\n        .then(() => {\n            console.log('User deleted.');\n            dispatch(setUser(''));\n            window.open('/', '_self');\n        })\n        .catch(err => {\n            console.error(err);\n        });\n}\n\nexport const updateUser = (field, userInput, callback) => dispatch => {\n    const config = {};\n    config[field] = userInput;\n\n    axios.patch(`https://myflix-mern.herokuapp.com/users/${JSON.parse(localStorage.user).Username}/${field}`, config,\n        {\n            headers: { Authorization: `Bearer ${localStorage.token}` }\n        })\n        .then(response => response.data)\n        .then((user) => {\n            dispatch(setUser(user));\n            callback();\n        })\n        .catch(err => {\n            console.error(err);\n        });\n}\n\nexport const loginUser = (username, password) => dispatch => {\n    axios.post('https://myflix-mern.herokuapp.com/login/', {\n        Username: username,\n        Password: password\n    })\n        .then(response => response.data)\n        .then((response) => {\n            dispatch(setUser(response.user));\n            localStorage.setItem('token', response.token);\n            dispatch(getMovies(response.token));\n        })\n        .catch(err => {\n            console.error(err, 'No such user.')\n        });\n};","import { combineReducers } from 'redux';\n\nimport { SET_MOVIES, SORT_AZ, SORT_ZA, SORT_DIRECTOR, SORT_GENRE, SORT_ID, SET_USER, SEARCH_BAR_VISIBLE, SEARCH_VALUE } from '../actions/actions.js';\n\n\nfunction movies(state = [], action) {\n    switch (action.type) {\n        case SET_MOVIES: // Sets the movies and sorts by id by default\n                return [...action.value].sort((a, b) => {\n                    if (a._id.toUpperCase() < b._id.toUpperCase()) {\n                        return -1;\n                    } if (a._id.toUpperCase() > b._id.toUpperCase()) {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                });\n        case SORT_AZ:\n            return [...state].sort((a, b) => {\n                if (a.Title.toUpperCase() < b.Title.toUpperCase()) {\n                    return -1;\n                } if (a.Title.toUpperCase() > b.Title.toUpperCase()) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n        case SORT_ZA:\n            return [...state].sort((a, b) => {\n                if (a.Title.toUpperCase() > b.Title.toUpperCase()) {\n                    return -1;\n                } if (a.Title.toUpperCase() < b.Title.toUpperCase()) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n        case SORT_DIRECTOR:\n            return [...state].sort((a, b) => {\n                if (a.Director.Name.toUpperCase() < b.Director.Name.toUpperCase()) {\n                    return -1;\n                } if (a.Director.Name.toUpperCase() > b.Director.Name.toUpperCase()) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n        case SORT_GENRE:\n            return [...state].sort((a, b) => {\n                if (a.Genre.Name.toUpperCase() < b.Genre.Name.toUpperCase()) {\n                    return -1;\n                } if (a.Genre.Name.toUpperCase() > b.Genre.Name.toUpperCase()) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n        case SORT_ID:\n            return [...state].sort((a, b) => {\n                if (a._id.toUpperCase() < b._id.toUpperCase()) {\n                    return -1;\n                } if (a._id.toUpperCase() > b._id.toUpperCase()) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n        default:\n            return state;\n    }\n}\n\nfunction user(state = '', action) {\n    switch (action.type) {\n        case SET_USER:\n            return action.newValue;\n        default:\n            return state;\n    }\n}\n\nfunction searchBarVisible(state = false, action) {\n    switch (action.type) {\n        case SEARCH_BAR_VISIBLE:\n            return action.value;\n        default:\n            return state;\n    }\n}\n\nfunction searchValue(state = '', action) {\n    switch (action.type) {\n        case SEARCH_VALUE:\n            return action.value;\n        default:\n            return state;\n    }\n}\n\n\nconst moviesApp = combineReducers({\n    movies,\n    user,\n    searchBarVisible,\n    searchValue\n});\n\nexport default moviesApp;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  sortAZ,\n  sortZA\n} from \"../../actions/actions.js\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Sort from \"@material-ui/icons/Sort\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\n\nfunction SortButton(props) {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  function handleToggle() {\n    setOpen(prevOpen => !prevOpen);\n  }\n\n  function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n        <ButtonGroup\n          variant=\"contained\"\n          color=\"default\"\n          ref={anchorRef}\n          aria-label=\"split button\"\n        >\n          <Button\n            color=\"default\"\n            size=\"small\"\n            aria-owns={open ? \"menu-list-grow\" : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleToggle}\n          >\n            <Sort />\n          </Button>\n        </ButtonGroup>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          transition\n          disablePortal\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper id=\"menu-list-grow\">\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList>\n                    <MenuItem key=\"1\" onClick={(e) => {props.sortAZ(); handleClose(e)}}>\n                      Sort A-Z\n                    </MenuItem>\n                    <MenuItem key=\"2\" onClick={(e) => {props.sortZA(); handleClose(e)}}>\n                      Sort Z-A\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n        </div>\n  );\n}\n\n\nconst mapDispatchToProps = {\n  sortAZ,\n  sortZA\n};\n\nexport default connect(null, mapDispatchToProps)(SortButton);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setUser,\n  setMovies,\n  makeSearch,\n  sortId\n} from \"../../actions/actions.js\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport SortButton from \"./sort-button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport \"./nav-bar.scss\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n}));\n\nfunction NavBar(props) {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const classes = useStyles();\n\n  if (props.searchBarVisible) {\n    return (\n      <AppBar position=\"static\">\n        <Toolbar className=\"navbar\">\n          <Link\n            component={RouterLink}\n            to=\"/\"\n            onClick={() => {\n              props.makeSearch(\"\");\n              setSearchInput(\"\");\n              props.sortId();\n            }}\n          >\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Home\n            </Typography>\n          </Link>\n          <Link component={RouterLink} to=\"/profile\">\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Profile\n            </Typography>\n          </Link>\n          <div className=\"search-and-sort\">\n            <SortButton />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <form\n                onSubmit={e => {\n                  e.preventDefault();\n                  props.makeSearch(searchInput);\n                  setSearchInput(\"\");\n                }}\n              >\n                <ClickAwayListener onClickAway={() => setSearchInput(\"\")}>\n                  <InputBase\n                    placeholder=\"Search…\"\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput\n                    }}\n                    inputProps={{ \"aria-label\": \"search\" }}\n                    onChange={e => setSearchInput(e.target.value)}\n                    value={searchInput}\n                  />\n                </ClickAwayListener>\n              </form>\n            </div>\n          </div>\n\n          <IconButton\n            id=\"log-out\"\n            variant=\"secondary\"\n            size=\"small\"\n            onClick={() => {\n              props.setUser(\"\");\n              props.setMovies([]);\n              window.open(\"/\", \"_self\");\n            }}\n          >\n            <Icon>power_settings_new</Icon>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    );\n  } else {\n    return (\n      <AppBar position=\"static\">\n        <Toolbar className=\"navbar\">\n          <Link\n            component={RouterLink}\n            to=\"/\"\n            onClick={() => {\n              props.makeSearch(\"\");\n              setSearchInput(\"\");\n              props.sortId();\n            }}\n          >\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Home\n            </Typography>\n          </Link>\n          <Link component={RouterLink} to=\"/profile\">\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Profile\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { searchBarVisible } = state;\n  return {\n    searchBarVisible: searchBarVisible\n  };\n};\n\nconst mapDispatchToProps = {\n  setUser,\n  setMovies,\n  makeSearch,\n  sortId\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavBar);\n","/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./movie-card.scss\";\nimport { Link } from \"react-router-dom\";\n\nexport function MovieCard(props) {\n  const { movie } = props;\n  return (\n    <Link\n      to={`/movies/${movie._id}`}\n      style={{ color: \"black\", textDecoration: \"none\" }}\n    >\n      <Card variant=\"link\">\n        <Card.Img variant=\"top\" src={movie.ImagePath} />\n        <Card.Body>\n          <Card.Title>\n            {movie.Title}{\" \"}\n            {props.user.FavoriteMovies.indexOf(props.movie._id) > -1 ? (\n              <b className=\"is-favorite\">★</b>\n            ) : (\n              <b className=\"is-not-favorite\">★</b>\n            )}\n          </Card.Title>\n          <Card.Text>{movie.Description}</Card.Text>\n        </Card.Body>\n      </Card>\n    </Link>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    Title: PropTypes.string,\n    ImagePath: PropTypes.string,\n    Description: PropTypes.string\n  }).isRequired\n};\n\nconst mapStateToProps = state => {\n  const { user, movies } = state;\n  return {\n    user: user,\n    movies: movies\n  };\n};\n\nexport default connect(mapStateToProps)(MovieCard);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { searchBarVisible } from '../../actions/actions.js';\nimport MovieCard from '../movie-card/movie-card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport { MainView } from '../main-view/main-view.jsx';\n\n\nfunction MoviesList(props) {\n    const { searchValue, movies } = props;\n\n    useEffect(() => {\n        props.searchBarVisible(true);\n\n        return function cleanup() {\n            props.searchBarVisible(false);\n        }\n    });\n\n    const moviesToShow = () => {\n        if (searchValue.length > 0) {\n            return movies.filter(movie => (movie.Title.toLowerCase().includes(searchValue.toLocaleLowerCase())) || (movie.Genre.Name.toLowerCase().includes(searchValue.toLocaleLowerCase())) || (movie.Director.Name.toLowerCase().includes(searchValue.toLocaleLowerCase())))\n        } else {\n            return movies;\n        }\n    }\n\n    if (!movies) {\n        return <MainView />\n        // return <div className='main-view' />\n    } else {\n        return <Container className='movies-list'>\n            {moviesToShow()[0] || !searchValue ?\n                <Row>{moviesToShow().map(movie => <Col key={movie._id} xl={3} sm={6} md={4} xs={12}> <MovieCard movie={movie} /></Col>)}</Row> :\n                <Row><Col><Alert variant='danger'>Your search returned no results.</Alert></Col></Row>\n            }\n        </Container>\n    }\n\n}\n\n\nconst mapStateToProps = state => {\n    const { movies, searchValue } = state;\n\n    return {\n        movies: movies,\n        searchValue: searchValue\n    };\n}\n\n\nexport default connect(mapStateToProps, { searchBarVisible })(MoviesList);","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/actions.js';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Link } from 'react-router-dom';\nimport './login-view.scss';\n\n\nexport function LoginView(props) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    return (\n        <Container className='login-view'>\n            <h1>Login</h1>\n            <Form >\n                <Form.Group controlId='formUsername'>\n                    <Form.Label>Username:</Form.Label>\n                    <Form.Control size='sm' type='text' placeholder='Username' value={username} onChange={e => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='formPassword'>\n                    <Form.Label>Password:</Form.Label>\n                    <Form.Control size='sm' type='password' placeholder='Password' value={password} onChange={e => setPassword(e.target.value)} />\n                </Form.Group>\n                <Button variant='primary' onClick={() => props.loginUser(username, password)}>Submit</Button>\n                <Form.Group controlId='formNewUser'>\n                    <Form.Text>New user? Click <Link to={`/register`}>here</Link> to register</Form.Text>\n                </Form.Group>\n            </Form>\n        </Container>\n    );\n}\n\nLoginView.propTypes = {\n    loginUser: PropTypes.func.isRequired\n}\n\nexport default connect(null, { loginUser })(LoginView)","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addMovieToFavorites, removeMovieFromFavorites } from '../../actions/actions.js';\nimport './movie-view.scss';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\n\nfunction MovieView(props) {\n\n    const { movies, movieId } = props;\n    if (!movies || !movies.length) return null;\n    const movie = movies.find(movie => movie._id == movieId);\n\n    return (\n        <div className='movie-view'>\n            <div className='movie-title'>\n                <h2 className='label'>Title</h2>\n                <p className='value'>{movie.Title}\n                    {\n                        props.user.FavoriteMovies.indexOf(movie._id) > -1 ?\n                            <Button variant='danger' onClick={() => props.removeMovieFromFavorites(movieId)}>Remove from favorite</Button> :\n                            <Button variant='primary' onClick={() => props.addMovieToFavorites(movieId)}>Add to favorite</Button>\n                    }\n                </p>\n            </div>\n            <div className='movie-description'>\n                <h3 className='label'>Description</h3>\n                <p className='value'>{movie.Description}</p>\n            </div>\n            <div className='movie-genre'>\n                <h3 className='label'>Genre</h3>\n                <p className='value'><Link to={`/genre/${movie.Genre.Name}`}>{movie.Genre.Name}</Link></p>\n            </div>\n            <div className='movie-director'>\n                <h3 className='label'>Director</h3>\n                <p className='value'><Link to={`/director/${movie.Director.Name}`}>{movie.Director.Name}</Link></p>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    const { user, movies } = state;\n    return {\n        user: user,\n        movies: movies\n    };\n}\n\nexport default connect(mapStateToProps, { addMovieToFavorites, removeMovieFromFavorites })(MovieView);","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Link } from 'react-router-dom';\nimport './registration-view.scss';\nimport axios from 'axios';\n\nexport function RegistrationView(props) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [birthday, setBirthday] = useState('');\n\n    const registerNewUser = () => {\n        axios.post('https://myflix-mern.herokuapp.com/users', {\n            Username: username,\n            Password: password,\n            Email: email,\n            Birthday: birthday\n        })\n        .then(() => {\n            window.open('/', '_self');\n        })\n        .catch(err => {\n            console.error('error registering the user: ', err);\n        });\n    }\n\n    return (\n        <Container className='registration-view'>\n        <h1>Register</h1>\n            <Form>\n                <Form.Group controlId='formNewUsername'>\n                    <Form.Label>Username:</Form.Label>\n                    <Form.Control size='sm' type='text' placeholder='Your username' value={username} onChange={e => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='formNewPassword'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control size='sm' type='password' placeholder='Your password' value={password} onChange={e => setPassword(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='formNewEmail'>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control size='sm' type='email' placeholder='your@email.com' value={email} onChange={e => setEmail(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='formNewBirthday'>\n                    <Form.Label>Birthday</Form.Label>\n                    <Form.Control size='sm' type='date' placeholder='MM/DD/YYYY' value={birthday} onChange={e => setBirthday(e.target.value)} />\n                </Form.Group>\n                <Button variant='primary' onClick={registerNewUser}>Register</Button>\n                <Form.Group controlId='formNewUser'>\n                    <Form.Text>Already registered? Click <Link to={'/'}>here</Link> to login</Form.Text>\n                </Form.Group>\n            </Form>\n        </Container>\n    );\n}\n\nRegistrationView.propTypes = {\n    username: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    birthday: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    userRegistered: PropTypes.func.isRequired\n}","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./genre-view.scss\";\nimport axios from \"axios\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nexport function GenreView(props) {\n  const [genre, setGenre] = useState(\"\");\n\n  useEffect(() => {\n    function getGenreInfo() {\n      axios\n        .get(`https://myflix-mern.herokuapp.com/genres/${props.genre}`, {\n          headers: { Authorization: `Bearer ${localStorage.token}` }\n        })\n        .then(response => setGenre(response.data))\n        .catch(err => {\n          console.error(err);\n        });\n    }\n\n    getGenreInfo();\n  }, [props]);\n\n  return (\n    <Container className=\"genre-view\">\n      <Row>\n        <Col>\n          <div>\n            <h3 className=\"label\">Genre</h3>\n            <p className=\"value\">{props.genre}</p>\n          </div>\n          <div>\n            <h3 className=\"label\">Description</h3>\n            <p className=\"value\">{genre.Description}</p>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h3 className=\"label\">{props.genre} movies</h3>\n          <ListGroup className=\"movies-by-genre\">\n            {props.movies.map(movie => {\n              if (movie.Genre.Name === genre.Name) {\n                return (\n                  <ListGroup.Item key={movie._id}>\n                    {movie.Title}\n                    <Link to={`/movies/${movie._id}`}>\n                      {\" \"}\n                      <Button variant=\"primary\" size=\"sm\">\n                        View\n                      </Button>\n                    </Link>\n                  </ListGroup.Item>\n                );\n              } else {\n                return null;\n              }\n            })}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  const { movies } = state;\n  return {\n    movies: movies\n  };\n};\n\nexport default connect(mapStateToProps)(GenreView);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./director-view.scss\";\nimport axios from \"axios\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nexport function DirectorView(props) {\n  const [director, setDirector] = useState(\"\");\n\n  useEffect(() => {\n    function getDirectorInfo() {\n      axios\n        .get(\n          `https://myflix-mern.herokuapp.com/directors/${props.directorName}`,\n          {\n            headers: { Authorization: `Bearer ${localStorage.token}` }\n          }\n        )\n        .then(response => setDirector(response.data))\n        .catch(err => {\n          console.error(err);\n        });\n    }\n\n    getDirectorInfo();\n  }, []);\n\n  return (\n    <Container className=\"director-view\">\n      <Row>\n        <Col>\n          <div>\n            <h3 className=\"label\">Director</h3>\n            <p className=\"value\">{props.directorName}</p>\n          </div>\n          <div>\n            <h3 className=\"label\">Bio</h3>\n            <p className=\"value\">{director.Bio}</p>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h3 className=\"label\">Movies by {props.directorName}</h3>\n          <ListGroup className=\"movies-by-director\">\n            {props.movies.map(movie => {\n              if (movie.Director.Name === director.Name) {\n                return (\n                  <ListGroup.Item key={movie._id}>\n                    {movie.Title}\n                    <Link to={`/movies/${movie._id}`}>\n                      {\" \"}\n                      <Button variant=\"primary\" size=\"sm\">\n                        View\n                      </Button>\n                    </Link>\n                  </ListGroup.Item>\n                );\n              } else {\n                return null;\n              }\n            })}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => {\n  const { movies } = state;\n  return {\n    movies: movies\n  };\n};\n\nexport default connect(mapStateToProps)(DirectorView);\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Form from \"react-bootstrap/Form\";\n\nexport function ChangePassword(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [oldPassword, setOldpassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newPasswordRepeat, setNewPasswordRepeat] = useState(\"\");\n\n  function submitChange(oldPassword, newPassword) {\n    axios\n      .patch(\n        `https://myflix-mern.herokuapp.com/users/${\n          props.user.Username\n        }/Password`,\n        {\n          OldPassword: `${oldPassword}`,\n          NewPassword: `${newPassword}`\n        },\n        {\n          headers: { Authorization: `Bearer ${localStorage.token}` }\n        }\n      )\n      .then(response => {\n        console.log(\"Password change succeeded\");\n        resetUserInput();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  function toggleCollapse() {\n    setIsOpen(!isOpen);\n  }\n\n  function resetUserInput() {\n    setIsOpen(null);\n    setOldpassword(\"\");\n    setNewPassword(\"\");\n    setNewPasswordRepeat(\"\");\n  }\n\n  return (\n    <>\n      <Button onClick={() => toggleCollapse()} variant=\"secondary\" size=\"sm\">\n        Edit\n      </Button>\n      <Collapse in={isOpen}>\n        <Form>\n          <Form.Control\n            type={props.type}\n            value={oldPassword}\n            placeholder={`Enter current ${props.field}`}\n            onChange={e => setOldpassword(e.target.value)}\n          />\n          <Form.Control\n            type={props.type}\n            value={newPassword}\n            placeholder={`Enter new ${props.field}`}\n            onChange={e => setNewPassword(e.target.value)}\n          />\n          <Form.Control\n            type={props.type}\n            value={newPasswordRepeat}\n            placeholder={`Repeat new ${props.field}`}\n            onChange={e => setNewPasswordRepeat(e.target.value)}\n          />\n          {newPassword === newPasswordRepeat &&\n          newPassword !== \"\" &&\n          oldPassword !== \"\" ? (\n            <Button\n              variant=\"primary\"\n              size=\"sm\"\n              onClick={() => submitChange(oldPassword, newPassword)}\n            >\n              Submit\n            </Button>\n          ) : (\n            <Button variant=\"secondary\" size=\"sm\">\n              Submit\n            </Button>\n          )}\n        </Form>\n      </Collapse>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Form from \"react-bootstrap/Form\";\n\nexport function EditProfile(props) {\n  const [isOpen, setIsOpen] = useState(null);\n  const [userInput, setUserInput] = useState(\"\");\n\n  function toggleCollapse() {\n    setIsOpen(!isOpen);\n  }\n\n  function resetUserInput() {\n    setIsOpen(null);\n    setUserInput(\"\");\n  }\n\n  return (\n    <>\n      <Button onClick={() => toggleCollapse()} variant=\"secondary\" size=\"sm\">\n        Edit\n      </Button>\n      <Collapse in={isOpen}>\n        <Form>\n          <Form.Control\n            type={props.type}\n            value={userInput}\n            placeholder={`Enter ${props.field}`}\n            onChange={e => setUserInput(e.target.value)}\n          />\n          <Button\n            variant=\"primary\"\n            size=\"sm\"\n            onClick={() =>\n              props.updateUser(props.field, userInput, () => resetUserInput())\n            }\n          >\n            Submit\n          </Button>\n        </Form>\n      </Collapse>\n    </>\n  );\n}\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  removeMovieFromFavorites,\n  deleteAccount,\n  setUser,\n  updateUser\n} from \"../../actions/actions.js\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { ChangePassword } from \"./change-password\";\nimport { EditProfile } from \"./edit-profile\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./profile-view.scss\";\n\nexport function ProfileView(props) {\n  if (!localStorage.user) {\n    return <Redirect to=\"/\" />;\n  } else if (!props.user) {\n    return null;\n  } else {\n    return (\n      <Container className=\"profile-view\">\n        <Row>\n          <Col>\n            <h2>User profile</h2>\n            <div className=\"user-username\">\n              <h3 className=\"label\">Username</h3>\n              <span className=\"value\">\n                {props.user.Username}{\" \"}\n                <EditProfile\n                  type={\"Username\"}\n                  field={\"Username\"}\n                  user={props.user}\n                  updateUser={props.updateUser}\n                />\n              </span>\n            </div>\n            <div className=\"user-password\">\n              <h3 className=\"label\">Password</h3>\n              <span className=\"value\">\n                ********{\" \"}\n                <ChangePassword\n                  type={\"Password\"}\n                  field={\"Password\"}\n                  user={props.user}\n                  updateUser={props.updateUser}\n                />\n              </span>\n            </div>\n            <div className=\"user-email\">\n              <h3 className=\"label\">Email</h3>\n              <span className=\"value\">\n                {props.user.Email}{\" \"}\n                <EditProfile\n                  type={\"Email\"}\n                  field={\"Email\"}\n                  user={props.user}\n                  updateUser={props.updateUser}\n                />\n              </span>\n            </div>\n            <div className=\"user-birthday\">\n              <h3 className=\"label\">Birthday</h3>\n              <span className=\"value\">\n                {props.user.Birthday}{\" \"}\n                <EditProfile\n                  type={\"Date\"}\n                  field={\"Birthday\"}\n                  user={props.user}\n                  updateUser={props.updateUser}\n                />\n              </span>\n            </div>\n            <div className=\"user-delete-account\">\n              <Button\n                onClick={() => props.deleteAccount()}\n                variant=\"danger\"\n                size=\"sm\"\n              >\n                Delete account\n              </Button>\n              <br />\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h3 className=\"label\">Favorite Movies</h3>\n            <ListGroup className=\"user-favorite-movies\">\n              {props.movies.map(mov => {\n                if (\n                  mov._id ===\n                  props.user.FavoriteMovies.find(favMov => favMov === mov._id)\n                ) {\n                  return (\n                    <ListGroup.Item key={mov._id}>\n                      {mov.Title}\n                      <Link to={`/movies/${mov._id}`}>\n                        {\" \"}\n                        <Button variant=\"primary\" size=\"sm\">\n                          View\n                        </Button>\n                      </Link>{\" \"}\n                      <Button\n                        variant=\"danger\"\n                        size=\"sm\"\n                        onClick={() => props.removeMovieFromFavorites(mov._id)}\n                      >\n                        Remove\n                      </Button>\n                    </ListGroup.Item>\n                  );\n                } else {\n                  return null;\n                }\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user, movies } = state;\n  return {\n    user: user,\n    movies: movies\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { removeMovieFromFavorites, deleteAccount, setUser, updateUser }\n)(ProfileView);\n","/* eslint-disable no-console */\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { setUser, getMovies } from \"../../actions/actions.js\";\nimport NavBar from \"../nav-bar/nav-bar\";\nimport MoviesList from \"../movies-list/movies-list\";\nimport LoginView from \"../login-view/login-view\";\nimport MovieView from \"../movie-view/movie-view\";\nimport { RegistrationView } from \"../registration-view/registration-view\";\nimport GenreView from \"../genre-view/genre-view\";\nimport DirectorView from \"../director-view/director-view\";\nimport ProfileView from \"../profile-view/profile-view\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./main-view.scss\";\n\nexport function MainView(props) {\n  const { user, setUser: dispatchSetUser, getMovies: dispatchGetMovies } = props;\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"token\");\n    if (accessToken !== null) {\n      dispatchSetUser(JSON.parse(localStorage.user));\n      dispatchGetMovies(accessToken);\n    }\n  }, [dispatchSetUser, dispatchGetMovies]);\n\n  if (!user) {\n    return (\n      <Router>\n        <Container className=\"main-view\" fluid=\"true\">\n          <Row>\n            <Route exact path=\"/\" render={() => <LoginView />} />\n            <Route path=\"/register\" render={() => <RegistrationView />} />\n            <Route path=\"/profile\" render={() => <Redirect to=\"/\" />} />\n          </Row>\n        </Container>\n      </Router>\n    );\n  } else {\n    return (\n      <Router>\n        <NavBar />\n        <Container className=\"main-view\" fluid=\"true\">\n          <Row>\n            <Route exact path=\"/\" render={() => <MoviesList />} />\n            <Route path=\"/profile\" render={() => <ProfileView />} />\n            <Route\n              path=\"/movies/:Id\"\n              render={({ match }) => (\n                <Col>\n                  <MovieView movieId={match.params.Id} />\n                </Col>\n              )}\n            />\n            <Route\n              path=\"/genre/:Genre\"\n              render={({ match }) => <GenreView genre={match.params.Genre} />}\n            />\n            <Route\n              path=\"/director/:Director\"\n              render={({ match }) => (\n                <DirectorView directorName={match.params.Director} />\n              )}\n            />\n          </Row>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { user } = state;\n  return {\n    user: user\n  };\n};\n\nconst mapDispatchToProps = {\n  setUser,\n  getMovies\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainView);\n","import React, { Component } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport moviesApp from './reducers/reducers.js';\nimport MainView from './components/main-view/main-view.jsx';\nimport './App.css';\n\nconst store = createStore(\n  moviesApp, \n  applyMiddleware(thunk)\n);\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainView />\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}